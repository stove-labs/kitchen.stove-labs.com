(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{100:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(1),a=r(6),o=(r(0),r(161)),i={id:"taquito",title:"Taquito SDK"},c={id:"knowledge/references/taquito",title:"Taquito SDK",description:"Taquito is a popular TypeScript/JavaScript SDK for developing on Tezos. It will take care of communicating with the blockchain in general. It brings a lot of convenience when interacting with [smart contracts](../smart_contract/smart-contract), because it provides a useful abstraction layer for multiple interactions with *storage* and *entrypoints*. The SDK supports adding [signatures](../tezos_protocol/cryptography/signature) within the SDK environment, as well as calling various external external signers, such as [TezBridge](tezbridge) or *Beacon*. ",source:"@site/docs/knowledge/references/taquito.md",permalink:"/docs/knowledge/references/taquito",editUrl:"https://github.com/stove-labs/learn.stove-labs.com/edit/master/website/docs/knowledge/references/taquito.md",sidebar:"wiki",previous:{title:"Transaction",permalink:"/docs/knowledge/tezos_protocol/operations/transaction"},next:{title:"TezBridge",permalink:"/docs/knowledge/references/tezbridge"}},s=[],l={rightToc:s};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Taquito is a popular TypeScript/JavaScript SDK for developing on Tezos. It will take care of communicating with the blockchain in general. It brings a lot of convenience when interacting with ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../smart_contract/smart-contract"}),"smart contracts"),", because it provides a useful abstraction layer for multiple interactions with ",Object(o.b)("em",{parentName:"p"},"storage")," and ",Object(o.b)("em",{parentName:"p"},"entrypoints"),". The SDK supports adding ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"../tezos_protocol/cryptography/signature"}),"signatures")," within the SDK environment, as well as calling various external external signers, such as ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"tezbridge"}),"TezBridge")," or ",Object(o.b)("em",{parentName:"p"},"Beacon"),". "),Object(o.b)("p",null,"In summary, Taquito is used to interact with smart contracts using TypeScript, instead of using the console. This SDK is used to:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Activate the account provided through the ",Object(o.b)("em",{parentName:"li"},"faucet"),".json"),Object(o.b)("li",{parentName:"ul"},"Deploy ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../smart_contract/michelson"}),"Michelson")," code"),Object(o.b)("li",{parentName:"ul"},"Read the entrypoints of the smart contract"),Object(o.b)("li",{parentName:"ul"},"Read the storage of the smart contract"),Object(o.b)("li",{parentName:"ul"},"Create and forge ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../tezos_protocol/operations/transaction"}),"transactions")),Object(o.b)("li",{parentName:"ul"},"Announce transactions to the node"),Object(o.b)("li",{parentName:"ul"},"Create unit tests in TypeScript"),Object(o.b)("li",{parentName:"ul"},"Interface with various wallets")))}p.isMDXComponent=!0},161:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,f=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return r?a.a.createElement(f,c({ref:t},l,{components:r})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);